{"name":"cnc.js","tagline":"CNC.js is a web-based CNC milling controller for the Arduino running GRBL.","body":"# CNC.js [![build status](https://travis-ci.org/cheton/cnc.js.svg?branch=master)](https://travis-ci.org/cheton/cnc.js) [![Coverage Status](https://coveralls.io/repos/cheton/cnc.js/badge.svg)](https://coveralls.io/r/cheton/cnc.js)\r\n[![NPM](https://nodei.co/npm/cncjs.png?downloads=true&stars=true)](https://nodei.co/npm/cncjs/)   \r\n![cncjs](https://raw.githubusercontent.com/cheton/cnc.js/master/media/banner2.png)\r\n\r\nCNC.js is a web-based CNC milling controller for the [Arduino](https://www.arduino.cc/) running [Grbl](https://github.com/grbl/grbl). It runs on an [Raspberry Pi](https://www.raspberrypi.org/) or a laptop computer that you have Node.js installed, connecting to the Arduino over a serial connection using a USB serial port, a Bluetooth serial module, or a  Serial-to-WiFi module like [XBee](https://www.arduino.cc/en/Guide/ArduinoWirelessShieldS2) or [USR-WIFI232-T](https://gist.github.com/ajfisher/1fdbcbbf96b7f2ba73cd).\r\n\r\n![cnc.js](https://raw.githubusercontent.com/cheton/cnc.js/master/media/cncjs.png) \r\n\r\n## Demo\r\n\r\n[![CNC](http://img.youtube.com/vi/fJyq4fyiGSc/0.jpg)](https://www.youtube.com/watch?v=fJyq4fyiGSc&hd=2 \"CNC.js\")\r\n\r\nJSDC 2015 speech: http://cheton.github.io/jsdc2015/#/81\r\n\r\n### Photo Gallery\r\n[![Photo Gallery](https://scontent.xx.fbcdn.net/hphotos-xat1/v/t1.0-9/12118907_10207901191546433_3867236073352040616_n.jpg?oh=97c977c426367130eef35b5e230637c4&oe=56A65008)](https://www.facebook.com/cheton.wu/media_set?set=a.10207901184746263.1073741852.1195704289&type=3)\r\n\r\n## Installation\r\n```bash\r\n$ npm install -g cncjs\r\n```\r\n\r\n## Usage\r\nRun `cnc` to start the server, and visit `http://yourhostname:8000/` to view the web console:\r\n```bash\r\n$ cnc\r\n```\r\n\r\nRun `cnc` with -h for detailed usage:\r\n```\r\n$ cnc -h\r\n\r\n  Usage: cnc [options]\r\n  \r\n  Options:\r\n\r\n    -h, --help               output usage information\r\n    -V, --version            output the version number\r\n    -p, --port               set listen port (default: 8000)\r\n    -l, --host               set listen address or hostname (default: 0.0.0.0)\r\n    -b, --backlog            set listen backlog (default: 511)\r\n    -c, --config <filename>  set configuration file\r\n```\r\n\r\n## Examples\r\nThere are several *.gcode files in the [examples](https://github.com/cheton/cnc.js/tree/master/examples) directory. You can use the GCode widget to load a GCode file and make a trial run.\r\n\r\nIf you don't have a CAM software, try using [jscut](http://jscut.org/) to create G-Code from *.svg. It's a simple CAM package that runs in the browser.\r\n\r\nCheck out a live demo at http://jscut.org/jscut.html.\r\n\r\n## Wiki\r\nhttps://github.com/cheton/cnc.js/wiki\r\n* [Prerequisite](https://github.com/cheton/cnc.js/wiki/Prerequisite)\r\n* [User Guide](https://github.com/cheton/cnc.js/wiki/User-Guide)\r\n* [FAQ](https://github.com/cheton/cnc.js/wiki/FAQ)\r\n\r\n## TODOs\r\n- [x] Soft reset GRBL / Unlock GRBL\r\n- [x] Spindle on/off\r\n- [ ] Remember last working state upon browser refresh\r\n- [ ] Drag and drop *.gcode files\r\n- [ ] Display circular arcs with G02 and G03 in the 3D GCode viewer<br>\r\n      http://www.cnccookbook.com/CCCNCGCodeArcsG02G03.htm\r\n- [ ] Convert between Metric and Imperial unit<br>\r\n      http://cnc-programming-tips.blogspot.tw/2014/12/g20-g21-unit-selection-codes.html\r\n- [ ] Webcam support\r\n\r\n## License\r\n\r\nCopyright (c) 2015 Cheton Wu\r\n\r\nLicensed under the [MIT License](LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}