{
  "name": "cnc",
  "tagline": "A web-based CNC milling controller for the Arduino running GRBL.",
  "body": "# cnc [![Travis CI Build Status](https://travis-ci.org/cheton/cnc.svg)](https://travis-ci.org/cheton/cnc) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/bf64c0brafpp4ucg?svg=true)](https://ci.appveyor.com/project/cheton/cnc) [![Coverage Status](https://coveralls.io/repos/cheton/cnc/badge.svg)](https://coveralls.io/r/cheton/cnc)\r\n\r\n\r\n[![NPM](https://nodei.co/npm/cncjs.png?downloads=true&stars=true)](https://nodei.co/npm/cncjs/)\r\n![cnc](https://raw.githubusercontent.com/cheton/cnc/master/media/banner.png)\r\n\r\nA web-based CNC milling controller for the [Arduino](https://www.arduino.cc/) running [Grbl](https://github.com/grbl/grbl). It runs on an [Raspberry Pi](https://www.raspberrypi.org/) or a laptop computer that you have Node.js installed, connecting to the Arduino over a serial connection using a USB serial port, a Bluetooth serial module, or a  Serial-to-WiFi module like [XBee](https://www.arduino.cc/en/Guide/ArduinoWirelessShieldS2) or [USR-WIFI232-T](https://gist.github.com/ajfisher/1fdbcbbf96b7f2ba73cd).\r\n\r\n![cnc.png](https://raw.githubusercontent.com/cheton/cnc/master/media/cnc.png)\r\n\r\n\r\n## Key Features\r\n* Supported CNC controllers\r\n  * Grbl v0.9 or later\r\n  * TinyG2 will be supported in v2.x\r\n* 3D Visualizer\r\n* Allows multiple HTTP connections at the same serial port\r\n* Supports a minimum width of 720px to target small-screen devices\r\n* [Widget Management](https://github.com/cheton/cnc/wiki/User-Guide#widget-management)\r\n* [TinyWeb Console for 320x240 LCD Display](https://github.com/cheton/cnc/wiki/User-Guide#tinyweb-console-for-320x240-lcd-display)\r\n* [Keyboard Shortcuts](https://github.com/cheton/cnc/wiki/User-Guide#keyboard-shortcuts)\r\n* [Contour ShuttleXpress](https://github.com/cheton/cnc/wiki/User-Guide#contour-shuttlexpress)\r\n* I18n Ready\r\n* Z-Probing\r\n\r\n## Installation\r\nFirst, ensure you have `prefix=~/.npm` in  `~/.npmrc`. For example:\r\n```bash\r\n$ echo \"prefix=~/.npm\" >> ~/.npmrc\r\n$ cat ~/.npmrc\r\nprefix=~/.npm\r\n```\r\n\r\nThen, install `cncjs` without `sudo`, or the `serialport` module may not install correctly on some platforms like Raspberry Pi.\r\n```bash\r\n$ npm install -g cncjs\r\n```\r\n\r\nIf you want to run it on Raspberry Pi with Raspbian Wheezy, be sure to [install gcc/g++ 4.8](https://somewideopenspace.wordpress.com/2014/02/28/gcc-4-8-on-raspberry-pi-wheezy/) before npm install.\r\n\r\nCheck out [wiki](https://github.com/cheton/cnc/wiki/Installation) for other installation methods.\r\n\r\n## Upgrade\r\nRun `npm update -g cncjs` to upgrade to a newer version. To determine the version, use `cnc -V`.\r\n\r\n## Usage\r\nRun `cnc` or `~/.npm/bin/cnc` to start the server, and visit `http://yourhostname:8000/` to view the web interface:\r\n```bash\r\n$ cnc\r\n```\r\n\r\nRun `cnc` with -h for detailed usage:\r\n```bash\r\n$ cnc -h\r\n\r\n  Usage: cnc [options]\r\n  \r\n  Options:\r\n\r\n    -h, --help                  output usage information\r\n    -V, --version               output the version number\r\n    -p, --port                  set listen port (default: 8000)\r\n    -l, --host                  set listen address or hostname (default: 0.0.0.0)\r\n    -b, --backlog               set listen backlog (default: 511)\r\n    -c, --config <filename>     set config file (default: ~/.cncrc)\r\n    -v, --verbose               increase the verbosity level\r\n    -m, --mount [<url>:]<path>  set the mount point for serving static files (default: /static:static)\r\n```\r\n\r\nIf you need view detailed logs for troubleshooting, you can run the server in debug mode.\r\n```bash\r\n$ cnc -vv\r\n```\r\n\r\n## Wiki\r\nhttps://github.com/cheton/cnc/wiki\r\n\r\n## Examples\r\nThere are several *.gcode files in the [examples](https://github.com/cheton/cnc/tree/master/examples) directory. You can use the GCode widget to load a GCode file and make a trial run.\r\n\r\nIf you don't have a CAM software, try using [jscut](http://jscut.org/) to create G-Code from *.svg. It's a simple CAM package that runs in the browser.\r\n\r\nCheck out a live demo at http://jscut.org/jscut.html.\r\n\r\n## Contributions\r\nUse [GitHub issues](https://github.com/cheton/cnc/issues) for requests.\r\n\r\nPull requests welcome! Learn how to [contribute](CONTRIBUTING.md).\r\n\r\n## Donate\r\n\r\nIf you would like to support this project, you can make a donation using PayPal. Thank you!\r\n\r\n[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=38CYN33CWPBR2)\r\n\r\n## License\r\n\r\nCopyright (c) 2015-2016 Cheton Wu\r\n\r\nLicensed under the [MIT License](LICENSE).\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}